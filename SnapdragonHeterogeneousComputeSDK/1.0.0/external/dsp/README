The stub and the skel libraries are built using Hexagon SDK 3.3.0. Steps to build these libraries using Hexagon SDK
is given below along with a brief overview of the contents of the directories.

build/
 - android.min - Makefile for compiling src/hetcompute_dsp_imp/main.c for Android [make tree V=android_Debug]
 - hexagon.min - Makefile for compiling src/hetcompute_dsp_imp/main.c for Hexagon. [make tree V=hexagon_Debug_dynamic]

include/
- hetcompute_dsp.idl - IDL file representing simple routines.
- hetcompute_dsp.h - Autogenerated file from make tree.

src/
- hetcompute_dsp_imp.c - Simple routines to be compiled into libraries for android/hexagon variant.
- hetcompute_dsp_main.c - Test driver for the dsp functions.

lib/ [32-bit version]
 - libhetcompute_dsp_skel.so - hexagon variant of library generated from make tree V=hexagon_Debug_dynamic
 - libhetcompute_dsp.so - android variant of library generated from make tree V=android_Debug

lib64/ [64-bit version]
  - libhetcompute_dsp.so - android variant of library generated from make tree V=android_Debug_aarch64

The hexagon & android variant of libhetcompute_dsp can be generated as follows

1. Clone any example (calculator recommended) under $(HEXAGON_INSTALL_PATH)/$(VERSION)/examples using $(HEXAGON_INSTALL_PATH)/$(VERSION)/scripts/clone_project.py
2. Copy src/hetcompute_dsp_imp.c & src/hetcompute_dsp_main.c to src/ in the cloned example.
3. Copy include/hetcompute_dsp.idl to inc/ in the cloned example.
4. Copy build/android.min & build/hexagon.min to the root of the cloned example.
5. make tree V=android_Debug [32-bit], make tree V=android_Debug_aarch64 [64 bit] for building android variant
6. make tree V=hexagon_Debug_dynamic for building hexagon variant.

